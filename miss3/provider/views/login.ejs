<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <link rel="shortcut icon" type="image/ico" href="favicon.ico"/>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Login</title>
</head>
<body>
    <h1>Secure Login</h1>
    <div id="redirect"><p>Will be redirected shortly</p></div>
    <input id="user" type="text" placeholder="username">
    <input id="pass" type="password" placeholder="password">
    <button onclick="handleSend()">Submit</button>
    <div id="msgBox">
        <!-- for error message -->
    </div>
    <div id="providerURI" data-uri=<%= PROV_URI %>></div>
    <script>
        let providerURI = document.getElementById('providerURI').dataset.uri;
        // collect existing query params
        let params = {};
        const existingParams = new URLSearchParams(window.location.search);
        for (const param of existingParams) {
            params[param[0]] = param[1];
        }

        // check for cookie to 'potentially' skip login
        checkForCookie()

        function saveCookie(cookie) {
            // check if local storage is supported by browser
            if (typeof(Storage) !== "undefined") {
                window.localStorage.guitarCookie = cookie
            }
        }

        // will only autofill username
        function checkForCookie() {
           // check if local storage is supported by browser
           if (typeof(Storage) !== "undefined") {
                const cookie = window.localStorage.guitarCookie;
                if (cookie != undefined && cookie != null) {
                    // got a cookie. Validate it
                    let uri = new URL(providerURI + '/validatecookie')
                    uri.search = new URLSearchParams({cookie: cookie}).toString();
                    fetch(uri, {method: 'POST'})
                    .then(res => res.json())
                    .then(data => {
                        console.log(data)
                        if (data.success) {
                            let userInput = document.getElementById("user");
                            userInput.value = data.username;
                        }
                    })
                }
            }
        }

        function redirectUser(code, userID) {
            let uri = new URL(providerURI + '/permissions')
            delete params["username"];
            delete params["password"];
            params["code"] = code;
            params["userID"] = userID;
            uri.search = new URLSearchParams(params).toString();
            location.assign(uri);
        }

        function handleSend() {
            // add input values
            let userInput = document.getElementById("user");
            let passInput = document.getElementById("pass");
            params["username"] = userInput.value;
            params["password"] = passInput.value;
            userInput.value = "";
            passInput.value = "";
            // send request for authentication
            let uri = new URL(providerURI + '/authenticate')
            uri.search = new URLSearchParams(params).toString();
            fetch(uri, {method: 'POST'})
            .then(res => res.json())
            .then(data => {
                if (data.success) {
                    // store cookie
                    saveCookie(data.cookie)
                    // redirect the user
                    redirectUser(data.code, data.userID)
                } else {
                    // invalid request
                    let msgBox = document.getElementById("msgBox");
                    if (msgBox.childElementCount === 0) {
                        let p = document.createElement("p");
                        p.style.color = "red";
                        p.appendChild(document.createTextNode("Username or Password is incorrect"));
                        msgBox.appendChild(p);
                        setTimeout(() => {
                            while (msgBox.firstChild) {
                                msgBox.removeChild(msgBox.firstChild)
                            }
                        }, 2000);
                    }

                }
            });

        }


    </script>
</body>
</html>